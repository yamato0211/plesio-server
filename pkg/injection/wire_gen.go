// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injection

import (
	"github.com/yamato0211/plesio-server/pkg/adapter"
	"github.com/yamato0211/plesio-server/pkg/adapter/http/handler"
	"github.com/yamato0211/plesio-server/pkg/infra/mysql"
	"github.com/yamato0211/plesio-server/pkg/infra/redis"
	"github.com/yamato0211/plesio-server/pkg/usecase"
	"github.com/yamato0211/plesio-server/pkg/utils/config"
	"github.com/yamato0211/plesio-server/pkg/web/ws"
)

// Injectors from wire.go:

func InitializeMasterHandler() *adapter.MasterHandler {
	dbConfig := config.NewDBConfig()
	db := mysql.NewMySQLConnector(dbConfig)
	userRepository := mysql.NewUserRepository(db)
	iUserUsecase := usecase.NewUserUsecase(userRepository)
	userHandler := handler.NewUserHandler(iUserUsecase)
	itemRepository := mysql.NewItemRepository(db)
	iItemUsecase := usecase.NewItemUsecase(itemRepository)
	usersItemsRepository := mysql.NewUsersItemsRepository(db)
	iUsersItemsUseCase := usecase.NewUsersItemsUseCase(usersItemsRepository)
	itemHandler := handler.NewItemHandler(iItemUsecase, iUsersItemsUseCase)
	masterHandler := adapter.NewMasterHandler(userHandler, itemHandler)
	return masterHandler
}

func InitializeWebSocketHub() *ws.Hub {
	redisConfig := config.NewRedisConfig()
	redisRepository := redis.NewRedisRepository(redisConfig)
	hub := ws.NewHub(redisRepository)
	return hub
}
